/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
    id 'net.nemerosa.versioning' version '2.8.2'
}

group = 'com.gmail.justinxvopro'
archivesBaseName = 'MyFirstGradleProject'
version = versioning.info.display

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
	//OkHttp
	implementation 'com.squareup.okhttp3:okhttp:4.7.2'
	// Use JUnit test framework
	testImplementation 'junit:junit:4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenPublish(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId group
            artifactId archivesBaseName
            version version
        }
    }
}

bintray {
    user = project.findProperty('bintray_user') ?: System.getEnv('BINTRAY_USER')
    key = project.findProperty('bintray_key') ?: System.getEnv('BINTRAY_KEY')
    publications = ['mavenPublish']
    pkg {
        repo = 'testRepo'
        name = archivesBaseName
        licenses = ['MIT']
        vcsUrl = 'https://github.com/jvogit/MyFirstGradleProject.git'
        publish = true
        version {
            desc = 'First release'
            released = new Date()
            gpg {
                sign = true
                passphrase = project.findProperty('gpg_passphrase') ?: System.getEnv('GPG_PASSPHRASE')
            }
        }
    }
}